{# --                                                                                                                                                       -- #}
{# --    c Wherescape Ltd 2017. Wherescape Ltd permits you to copy this Template solely for use with the RED software, and to modify this Template          -- #}
{# --    for the purposes of using that modified Template with the RED software, but does not permit copying or modification for any other purpose.         -- #}
{# --                                                                                                                                                       -- #}
{# -- =============================================================================                                                                         -- #}
{# --                                                                                                                                                       -- #}
{# -- DBMS Name          : SNOWFLAKE                                                                                                                        -- #}
{# -- Template Name      : wsl_snowflake_pscript_dv_perm                                                                                                    -- #}
{# -- RED Version        : 8.0.1.0                                                                                                                          -- #}
{# -- Description        : This template creates a SNOWFLAKE procedure using Insert                                                                         -- #}
{# --                      specifically designed for RED data vault permanent tables                                                                        -- #}
{# --                                                                                                                                                       -- #}
{# -- =============================================================================                                                                         -- #}
{# --                                                                                                                                                       -- #}
{# --                                                                                                                                                       -- #}
{# -- Notes / History                                                                                                                                       -- #}
{# -- JL: Snowflake Release 1.0.0 (2017-06-06)                                                                                                              -- #}
{# -- JL: Powershell Mods 2.0.0 (2017-08-03)                                                                                                                -- #}
{# --                                                                                                                                                       -- #}
{# --                                                                                                                                                       -- #}
{% import "wsl_snowflake_utility_dv" %}
{# --                                                            Start of main procedure text                                                               -- #}
#--=============================================================================={%br%}
#-- DBMS Name        :    SNOWFLAKE {{table.dbType.name}}{%br%}
#-- Block Name       :    {{settings.procedureName}}{%br%}
#-- Template         :    {{settings.template.name}}{%br%}
#-- Template Version :    8.0.1.0{%br%}
#-- Description      :    Update the {{table.objectType.name}} table {{table.name}}{%br%}
#-- Generated by     :    {{env.productVersion}}{%br%}
#-- Generated for    :    {{env.licensedTo}}{%br%}
#-- Generated on     :    {{env.currentTimestamp}}{%br%}
#-- Author           :    {{env.userName}}{%br%}
#--=============================================================================={%br%}
#-- Notes / History{%br%}
#--{%br%}

Import-module -Name WslPowershellCommon -DisableNameChecking{%br%}
Import-module -Name WslPowershellSnowflake -DisableNameChecking{%br%}
$tgtConn = New-Object System.Data.Odbc.OdbcConnection{%br%}
Hide-Window{%br%}

#--============================================================================{%br%}
#-- General Variables{%br%}
#--============================================================================{%br%}{%br%}
$sequence = ${env:WSL_SEQUENCE}{%br%}
$jobName = ${env:WSL_JOB_NAME}{%br%}
$taskName = ${env:WSL_TASK_NAME}{%br%}
$jobId = ${env:WSL_JOB_KEY}{%br%}
$taskId = ${env:WSL_TASK_KEY}{%br%}
$return_Msg = "{{table.name}} updated."{%br%}
$status = 1{%br%}

#--============================================================================{%br%}
#-- Main{%br%}
#--============================================================================{%br%}{%br%}
$step = {% counter %}00{%br%}
{%- if settings.deleteBeforeInsert and not settings.deleteBeforeInsertTruncate %}
$deleteCount = 0{%br%}
{%- endif %}
$insertCount = 0{%br%}

{%- for par in settings.parameters %}
  {%- if loop.first %}
{%br%}
#--============================================================================{%br%}
#-- Set Parameter Variables{%br%}
#--============================================================================{%br%}{%br%}
$step = {% counter %}00{%br%}{%br%}
  {%- endif %}
${{par}} = (WsParameterRead "{{par}}")[0]{%br%}
{%- endfor %}

#--============================================================================{%br%}
#-- Set Timezone{%br%}
#--============================================================================{%br%}{%br%}
$step = {% counter %}00{%br%}{%br%}
$timeZone = Get-ExtendedProperty -PropertyName "SF_TIMEZONE" -TableName "{{table.name}}"
if( ! [string]::IsNullOrEmpty($timeZone)) {
    $tzSql = "ALTER SESSION SET TIMEZONE = '$timeZone'"
    $SnowflakeResult = Run-Snowflake-RedSQL -sql $tzSql -dsn ${env:WSL_TGT_DSN} -uid ${env:WSL_TGT_USER} -pwd ${env:WSL_TGT_PWD} -failureMsg "Failed to alter session timezone to '$timeZone'" -odbcConn $tgtConn
}{% br %}
{% br %}
{#- Insert new records #}

if ( $status -eq 1 ){
{%br%}
  #--============================================================================{%br%}
  #-- Insert new records{%br%}
  #--============================================================================{%br%}{%br%}
  $step = {% counter %}00{%br%}{%br%}
  $sql = @"
  INSERT INTO [TABLEOWNER].[{{table.name}}]{%br%}
  {{- addSetInsertTargetColumns(indentString = "  ")}}    
  SELECT {{distinct()}} {{addSetInsertColumnsPerm(indentString = "       ")}}
  {%- if table.sourceJoinDetails.join | trim != "" %}  {{table.sourceJoinDetails.join}}{%br%} {%- endif %}
  {%- if table.objectType.name == "Satellite" %}  {{addSatCurrentVersion()}} {%- endif %}
  {%- if table.sourceJoinDetails.where | trim != "" %}  {{table.sourceJoinDetails.where | trim }}{%br%} {%- endif %}
  {%- if table.objectType.name == "Hub" %}  {{addHubWhereNotExists()}}
  {%- elseif table.objectType.name == "Link" %}  {{addLinkWhereNotExists()}}
  {%- elseif table.objectType.name == "Satellite" %}  {{addSatWhereNotExists()}}
  {%- endif %}
  {%- if table.sourceJoinDetails.groupBy | trim != "" %}  {{table.sourceJoinDetails.groupBy | trim }}{%br%} {%- endif %}
  ;{%br%}
"@
  $SnowflakeResult = Run-Snowflake-RedSQL -sql $sql -dsn ${env:WSL_TGT_DSN} -uid ${env:WSL_TGT_USER} -pwd ${env:WSL_TGT_PWD} -failureMsg "Failed insert into table {{table.name}} step $step" -odbcConn $tgtConn
  $insertCount = $insertCount + $SnowflakeResult[1]
  $return_Msg = $SnowflakeResult[2]{%br%}
}{%br%}

#--====================================================={%br%}
#-- All Done report the results{%br%}
#--====================================================={%br%}{%br%}
$step = {% counter %}00{%br%}{%br%}
#-- WsWrkTask call to updated row counts in Ws_Wrk_Task_Run/Log{%br%}
{%- if settings.deleteBeforeInsert and not settings.deleteBeforeInsertTruncate %}
$metaResult = WsWrkTask -Replaced $insertCount -Deleted $deleteCount{%br%}
{%- else %}
$metaResult = WsWrkTask -Replaced $insertCount{%br%}
{%- endif %}
if ( $metaResult -lt -1 ){
  $status = -2{%br%}
  $return_Msg = "Failure executing WsWrkTask. $insertCount records inserted."{%br%}
}

#-- Work out return message{%br%}
if ( $status -eq 1 ) {
{%br%}
  $return_Msg = "{{table.name}} updated.  "{%br%}
  $return_Msg += "$insertCount records inserted.  "{%br%}
  {%- if settings.deleteBeforeInsert and not settings.deleteBeforeInsertTruncate %}
  $return_Msg += "$deleteCount records deleted.  "{%br%}
  {%- endif %}
}

$status
$return_Msg

$tgtConn.Dispose()
